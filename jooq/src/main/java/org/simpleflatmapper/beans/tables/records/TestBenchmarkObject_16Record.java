/**
 * This class is generated by jOOQ
 */
package org.simpleflatmapper.beans.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;
import org.simpleflatmapper.beans.tables.TestBenchmarkObject_16;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestBenchmarkObject_16Record extends UpdatableRecordImpl<TestBenchmarkObject_16Record> implements Record16<Long, String, String, Integer, Short, Integer, Long, Double, Double, Short, Integer, Long, Double, Double, Integer, Integer> {

	private static final long serialVersionUID = -1265917728;

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.email</code>.
	 */
	public void setEmail(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.email</code>.
	 */
	public String getEmail() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.year_started</code>.
	 */
	public void setYearStarted(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.year_started</code>.
	 */
	public Integer getYearStarted() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field5</code>.
	 */
	public void setField5(Short value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field5</code>.
	 */
	public Short getField5() {
		return (Short) getValue(4);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field6</code>.
	 */
	public void setField6(Integer value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field6</code>.
	 */
	public Integer getField6() {
		return (Integer) getValue(5);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field7</code>.
	 */
	public void setField7(Long value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field7</code>.
	 */
	public Long getField7() {
		return (Long) getValue(6);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field8</code>.
	 */
	public void setField8(Double value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field8</code>.
	 */
	public Double getField8() {
		return (Double) getValue(7);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field9</code>.
	 */
	public void setField9(Double value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field9</code>.
	 */
	public Double getField9() {
		return (Double) getValue(8);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field10</code>.
	 */
	public void setField10(Short value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field10</code>.
	 */
	public Short getField10() {
		return (Short) getValue(9);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field11</code>.
	 */
	public void setField11(Integer value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field11</code>.
	 */
	public Integer getField11() {
		return (Integer) getValue(10);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field12</code>.
	 */
	public void setField12(Long value) {
		setValue(11, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field12</code>.
	 */
	public Long getField12() {
		return (Long) getValue(11);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field13</code>.
	 */
	public void setField13(Double value) {
		setValue(12, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field13</code>.
	 */
	public Double getField13() {
		return (Double) getValue(12);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field14</code>.
	 */
	public void setField14(Double value) {
		setValue(13, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field14</code>.
	 */
	public Double getField14() {
		return (Double) getValue(13);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field15</code>.
	 */
	public void setField15(Integer value) {
		setValue(14, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field15</code>.
	 */
	public Integer getField15() {
		return (Integer) getValue(14);
	}

	/**
	 * Setter for <code>sfm.test_benchmark_object_16.field16</code>.
	 */
	public void setField16(Integer value) {
		setValue(15, value);
	}

	/**
	 * Getter for <code>sfm.test_benchmark_object_16.field16</code>.
	 */
	public Integer getField16() {
		return (Integer) getValue(15);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record16 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Long, String, String, Integer, Short, Integer, Long, Double, Double, Short, Integer, Long, Double, Double, Integer, Integer> fieldsRow() {
		return (Row16) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row16<Long, String, String, Integer, Short, Integer, Long, Double, Double, Short, Integer, Long, Double, Double, Integer, Integer> valuesRow() {
		return (Row16) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.YEAR_STARTED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field5() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD5;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field6() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD6;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field7() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD7;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field8() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD8;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field9() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD9;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field10() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD10;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field11() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD11;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field12() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD12;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field13() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD13;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field14() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD14;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field15() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD15;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field16() {
		return TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16.FIELD16;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getYearStarted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value5() {
		return getField5();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value6() {
		return getField6();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value7() {
		return getField7();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value8() {
		return getField8();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value9() {
		return getField9();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value10() {
		return getField10();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value11() {
		return getField11();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value12() {
		return getField12();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value13() {
		return getField13();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value14() {
		return getField14();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value15() {
		return getField15();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value16() {
		return getField16();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value3(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value4(Integer value) {
		setYearStarted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value5(Short value) {
		setField5(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value6(Integer value) {
		setField6(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value7(Long value) {
		setField7(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value8(Double value) {
		setField8(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value9(Double value) {
		setField9(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value10(Short value) {
		setField10(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value11(Integer value) {
		setField11(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value12(Long value) {
		setField12(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value13(Double value) {
		setField13(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value14(Double value) {
		setField14(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value15(Integer value) {
		setField15(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record value16(Integer value) {
		setField16(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16Record values(Long value1, String value2, String value3, Integer value4, Short value5, Integer value6, Long value7, Double value8, Double value9, Short value10, Integer value11, Long value12, Double value13, Double value14, Integer value15, Integer value16) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		value11(value11);
		value12(value12);
		value13(value13);
		value14(value14);
		value15(value15);
		value16(value16);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TestBenchmarkObject_16Record
	 */
	public TestBenchmarkObject_16Record() {
		super(TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16);
	}

	/**
	 * Create a detached, initialised TestBenchmarkObject_16Record
	 */
	public TestBenchmarkObject_16Record(Long id, String name, String email, Integer yearStarted, Short field5, Integer field6, Long field7, Double field8, Double field9, Short field10, Integer field11, Long field12, Double field13, Double field14, Integer field15, Integer field16) {
		super(TestBenchmarkObject_16.TEST_BENCHMARK_OBJECT_16);

		setValue(0, id);
		setValue(1, name);
		setValue(2, email);
		setValue(3, yearStarted);
		setValue(4, field5);
		setValue(5, field6);
		setValue(6, field7);
		setValue(7, field8);
		setValue(8, field9);
		setValue(9, field10);
		setValue(10, field11);
		setValue(11, field12);
		setValue(12, field13);
		setValue(13, field14);
		setValue(14, field15);
		setValue(15, field16);
	}
}
