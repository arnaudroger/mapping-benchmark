/**
 * This class is generated by jOOQ
 */
package org.simpleflatmapper.beans.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.simpleflatmapper.beans.Keys;
import org.simpleflatmapper.beans.Sfm;
import org.simpleflatmapper.beans.tables.records.TestBenchmarkObject_16Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestBenchmarkObject_16 extends TableImpl<TestBenchmarkObject_16Record> {

	private static final long serialVersionUID = -1364607419;

	/**
	 * The reference instance of <code>sfm.test_benchmark_object_16</code>
	 */
	public static final TestBenchmarkObject_16 TEST_BENCHMARK_OBJECT_16 = new TestBenchmarkObject_16();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TestBenchmarkObject_16Record> getRecordType() {
		return TestBenchmarkObject_16Record.class;
	}

	/**
	 * The column <code>sfm.test_benchmark_object_16.id</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Long> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.name</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.email</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, String> EMAIL = createField("EMAIL", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.year_started</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Integer> YEAR_STARTED = createField("YEAR_STARTED", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field5</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Short> FIELD5 = createField("FIELD5", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field6</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Integer> FIELD6 = createField("FIELD6", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field7</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Long> FIELD7 = createField("FIELD7", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field8</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Double> FIELD8 = createField("FIELD8", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field9</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Double> FIELD9 = createField("FIELD9", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field10</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Short> FIELD10 = createField("FIELD10", org.jooq.impl.SQLDataType.SMALLINT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field11</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Integer> FIELD11 = createField("FIELD11", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field12</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Long> FIELD12 = createField("FIELD12", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field13</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Double> FIELD13 = createField("FIELD13", org.jooq.impl.SQLDataType.FLOAT, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field14</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Double> FIELD14 = createField("FIELD14", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field15</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Integer> FIELD15 = createField("FIELD15", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>sfm.test_benchmark_object_16.field16</code>.
	 */
	public final TableField<TestBenchmarkObject_16Record, Integer> FIELD16 = createField("FIELD16", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>sfm.test_benchmark_object_16</code> table reference
	 */
	public TestBenchmarkObject_16() {
		this("TEST_BENCHMARK_OBJECT_16", null);
	}

	/**
	 * Create an aliased <code>sfm.test_benchmark_object_16</code> table reference
	 */
	public TestBenchmarkObject_16(String alias) {
		this(alias, TEST_BENCHMARK_OBJECT_16);
	}

	private TestBenchmarkObject_16(String alias, Table<TestBenchmarkObject_16Record> aliased) {
		this(alias, aliased, null);
	}

	private TestBenchmarkObject_16(String alias, Table<TestBenchmarkObject_16Record> aliased, Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TestBenchmarkObject_16Record> getPrimaryKey() {
		return Keys.KEY_TEST_BENCHMARK_OBJECT_16_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TestBenchmarkObject_16Record>> getKeys() {
		return Arrays.<UniqueKey<TestBenchmarkObject_16Record>>asList(Keys.KEY_TEST_BENCHMARK_OBJECT_16_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TestBenchmarkObject_16 as(String alias) {
		return new TestBenchmarkObject_16(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TestBenchmarkObject_16 rename(String name) {
		return new TestBenchmarkObject_16(name, null);
	}
}
